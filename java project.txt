// Online Java Compiler
// Use this editor to write, compile and run your Java code online

import java.sql.*;
import java.util.Scanner;

public class BudgetTrackerConsole {
    static final String DB_URL = "jdbc:mysql://localhost:3306/budget_tracker";
    static final String DB_USER = "root"; // change if needed
    static final String DB_PASS = "";     // change if needed

    public static void main(String[] args) {
        createTableIfNotExists();

        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("===== Budget Tracker =====");
            System.out.println("1. Add Expense");
            System.out.println("2. View All Expenses");
            System.out.println("3. Exit");
            System.out.print("Enter choice: ");
            int choice = scanner.nextInt();
            scanner.nextLine();  // consume newline

            switch (choice) {
                case 1:
                    addExpense(scanner);
                    break;
                case 2:
                    viewExpenses();
                    break;
                case 3:
                    System.out.println("Goodbye!");
                    return;
                default:
                    System.out.println("Invalid choice. Try again.");
            }
        }
    }

    private static void createTableIfNotExists() {
        String sql = "CREATE TABLE IF NOT EXISTS expenses (" +
                     "id INT AUTO_INCREMENT PRIMARY KEY, " +
                     "category VARCHAR(100), " +
                     "amount DOUBLE, " +
                     "date DATE, " +
                     "note VARCHAR(255)" +
                     ");";

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            try (Connection conn = DriverManager.getConnection(DB_URL, DB_USER, DB_PASS);
                 Statement stmt = conn.createStatement()) {
                stmt.execute(sql);
            }
        } catch (Exception e) {
            System.out.println("Error creating table: " + e.getMessage());
        }
    }

    private static void addExpense(Scanner scanner) {
        try {
            System.out.print("Enter category: ");
            String category = scanner.nextLine();
            System.out.print("Enter amount: ");
            double amount = scanner.nextDouble();
            scanner.nextLine(); // consume newline
            System.out.print("Enter date (YYYY-MM-DD): ");
            String date = scanner.nextLine();
            System.out.print("Enter note: ");
            String note = scanner.nextLine();

            String sql = "INSERT INTO expenses (category, amount, date, note) VALUES (?, ?, ?, ?)";

            Class.forName("com.mysql.cj.jdbc.Driver");
            try (Connection conn = DriverManager.getConnection(DB_URL, DB_USER, DB_PASS);
                 PreparedStatement pstmt = conn.prepareStatement(sql)) {

                pstmt.setString(1, category);
                pstmt.setDouble(2, amount);
                pstmt.setDate(3, Date.valueOf(date));
                pstmt.setString(4, note);

                pstmt.executeUpdate();
                System.out.println("Expense added successfully.");
            }
        } catch (Exception e) {
            System.out.println("Error adding expense: " + e.getMessage());
        }
    }

    private static void viewExpenses() {
        String sql = "SELECT * FROM expenses";

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            try (Connection conn = DriverManager.getConnection(DB_URL, DB_USER, DB_PASS);
                 Statement stmt = conn.createStatement();
                 ResultSet rs = stmt.executeQuery(sql)) {

                System.out.println("=== Expenses ===");
                while (rs.next()) {
                    int id = rs.getInt("id");
                    String category = rs.getString("category");
                    double amount = rs.getDouble("amount");
                    Date date = rs.getDate("date");
                    String note = rs.getString("note");

                    System.out.printf("ID: %d | %s | ₹%.2f | %s | Note: %s%n",
                            id, category, amount, date, note);
                }

            }
        } catch (Exception e) {
            System.out.println("Error retrieving expenses: " + e.getMessage());
        }
    }
}
